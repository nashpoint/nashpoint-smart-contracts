// SPDX-License-Identifier: BUSL-1.1
pragma solidity 0.8.28;

import {Test, console} from "forge-std/Test.sol";

import {MPTLib} from "src/libraries/MPTLib.sol";

contract MPTLibTest is Test {
    uint256 BLOCK_NUMBER = 377293115;

    mapping(bytes32 => bool) usedLogs;

    function setUp() public {
        vm.createSelectFork(vm.envString("ARBITRUM_RPC_URL"), BLOCK_NUMBER + 16);
        vm.roll(BLOCK_NUMBER + 16);
        vm.setBlockhash(BLOCK_NUMBER, 0xc6d17a0778ff5e61f77066f2653965d2f300b53379f0640d446ff79a5b658e6a);
    }

    function test_lib() external {
        bytes memory HEADER_RLP =
            hex"f90223a0616ac97aa5ac3093362bfcb9f1cdfc8e187bf5be75057529d8c22e4ff57a5887a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794a4b000000000000000000073657175656e636572a09671cd2fd092a203cda2b8b4abac6db1aec21b8a977b144dbeff78045e61299ea0a93dbfab45674abb3d34cb5054c12d0494fd1f95cc20547abed5204b86b724c0a09347df060a85407b05d358fc8397e7e4cb146401dd7b5a540ca8f311b6e1938db901000014000840000010000000000000002000220100000000100000100104100011040000400000000000800000c1800000000040030041200900802000002000000000020106010808010000080001000000000c0a100000102104200000000081004040200210040000010a042000088000014004000046040000001000080000014000021204200001000010000000010000000000000000001000000000000022000410040060000000804200800401080020040000000000400000000000040084200200000004080000000042000000002000020020400000000010003a4000900040000000000008000000022000020020000100004348000000200100020184167d093b8704000000000000831294cb8468bff837a011689e6b40281e6c81779879ee37fa96b51db4dce19de693928af0f7d050dad0a00000000000024f29000000000163e84a00000000000000280000000000000000880000000000203af883989680";

        bytes memory INDEX_RLP = hex"03";

        bytes[] memory PROOF = new bytes[](3);
        PROOF[0] = bytes(
            hex"f851a05daf85d3caaa233b6cf0ab7fff602de00579afd5f843c6433d79826f89c908c180808080808080a0b0f51de7909653fadedb604e425c3ae1245d466325c8296662c289fa327eeeea8080808080808080"
        );
        PROOF[1] = bytes(
            hex"f9015180a0574c5ce367b9120dcfc78cc4369fb4bb936cb47cb1992e66a4f46a0229cdbfeca08f27b7ebcc31033bbb1114b2891293d62b10d484f44775c17c71699785000503a0c44fd9dd16b65555d1bd5bd06961647c1debd2fed6291a5eb4d17d023e2d9728a0becc4006b75a15e47b5a36b6f596465862164eda3c00fd5c192e474db7458e81a0b776c459577b762abbc203b9333c91fc732223d6e2b3344f9218e0c49fbb7501a0c8610e635d418a38e7601a59f57ab01d583354103ccdc8fd327e9bc61a9a33c9a0069fa0f7e48f73d7ca91eacf1bf8d364285ca8200d2a0893a652222b1646c052a034e3c55cd3f1d49c5a32ceb73d02368434eec1c871e0c40329932c089f52ffd6a0487cdd2eae87a69301363bf277f9effad1d3fd81b4a04ff48f7e4b0bda42a9eea089015006c4844d0c5e42284bacb2f82b738d5cb767053aed632c5b8b6704a5a0808080808080"
        );
        PROOF[2] = bytes(
            hex"f909e820b909e402f909e00183064e8fb901000010000040000000000000000000000000020000000000000000000004000000000000000000000000000000c000000000000002000000000000000000000000000000000400080001000008000000000000040000000010000400000000000000400000000004000001020000000080000000040000000000000010000000000000000200000000010000000000000000000000000000000000000000000000000000100400000000000000000004000000000400000000000000000000000000000002000000000000000000020000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000f908d5f9055a94413ec43aa8e4980a1f2671e92c6b1d9fc15eabcde1a066753cd2356569ee081232e3be8909b950e0a76c1f8460c3a5e3c2be32b11bedb905200000000000000000000000003dad21a73a63bbd186f57f733d271623467b6c780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000020449e664ff00000000000000000000000037ec21365dc39b0b74ea7b6fabffbcb277568ac400000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000008e0b8eb1f9033c5923d55a206d3c4b37932bf43200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000025737123bafd100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c3c60521e9ec1032b29fc690f1593a8005c00fca1ec27e3b70ff32e4f3419039804de6d71ae8fb45c9db33152f84534044a64a8f888313ef40223c085eda4816021b057314da103429a89ac545b0493b4b777814c00c98bfb5258ad794fde1a40ba210c1290f19ba3a664e2c0d70aa98e606dc6bc4ab718778811a190c9dc7b950241bbf883c7a7fbb52590d278b4b276d481f5e37271462386bde46e6d0f1f20bbb9d130f02fbc582ace848e70efe73b64cce12d1d962e17d04840ba2570790f526b31b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000015e5b6c483b7b86cf500bead1295c36e84a856d10000000000000000000000000000000000000000000000000000000000000003f89b9437ec21365dc39b0b74ea7b6fabffbcb277568ac4f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000003dad21a73a63bbd186f57f733d271623467b6c78a00000000000000000000000008e0b8eb1f9033c5923d55a206d3c4b37932bf432a00000000000000000000000000000000000000000000000025737123bafd10000f9025c943dad21a73a63bbd186f57f733d271623467b6c78f842a027107ee7622d58a260ded013cac8dea85f6d4c3bf0be25357e4026fff1d79fc5a00000000000000000000000003dad21a73a63bbd186f57f733d271623467b6c78b9020000000000000000000000000037ec21365dc39b0b74ea7b6fabffbcb277568ac400000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000008e0b8eb1f9033c5923d55a206d3c4b37932bf43200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000025737123bafd100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000f87a94413ec43aa8e4980a1f2671e92c6b1d9fc15eabcdf842a0442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556ea0273867cb53ca59714245dee59bf595d771e5b6ce3ac6fed05c7c8b7e6a52a055a00000000000000000000000000000000000000000000000000000000000000000"
        );

        assertFalse(usedLogs[0x855771fa11a17f805046968b9c0454536ef8dec5a659f4756cb094c8cc3596ac]);

        (uint256 stTokenAmount, uint256 assetAmount) = MPTLib.verifySettlementEvent(
            MPTLib.Args(
                BLOCK_NUMBER,
                HEADER_RLP,
                INDEX_RLP,
                PROOF,
                MPTLib.SETTLE_SUBSCRIBER_TOPIC,
                0x3DAd21A73a63bBd186f57f733d271623467b6c78,
                0x8E0B8eB1F9033C5923D55a206D3C4B37932bf432,
                0x37EC21365dC39B0b74ea7b6FabFfBcB277568AC4,
                0xaf88d065e77c8cC2239327C5EDb3A432268e5831
            ),
            usedLogs
        );

        assertEq(stTokenAmount, 43178000000000000000);
        assertEq(assetAmount, 0);
        assertTrue(usedLogs[0x855771fa11a17f805046968b9c0454536ef8dec5a659f4756cb094c8cc3596ac]);
    }
}
